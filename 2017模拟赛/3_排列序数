/*
(3)标题： 排列序数

X星系的某次考古活动发现了史前智能痕迹。
这是一些用来计数的符号，经过分析它的计数规律如下：
（为了表示方便，我们把这些奇怪的符号用a~q代替）

abcdefghijklmnopq 表示0
abcdefghijklmnoqp 表示1
abcdefghijklmnpoq 表示2
abcdefghijklmnpqo 表示3
abcdefghijklmnqop 表示4
abcdefghijklmnqpo 表示5
abcdefghijklmonpq 表示6
abcdefghijklmonqp 表示7
.....

在一处石头上刻的符号是：
bckfqlajhemgiodnp

请你计算出它表示的数字是多少？

请提交该整数，不要填写任何多余的内容，比如说明或注释。
*/

/*
本题利用了康托展开

康托展开表示的是当前排列在n个不同元素的全排列中的名次。比如213在这3个数所有排列中排第3。
 
那么，对于n个数的排列，康托展开为：X=a[n](n-1)!+a[n-1](n-2)!+…+a[i]*(i-1)!+…+a[2]*1!+a[1]*0![1] 
 
其中表示第i个元素在未出现的元素中排列第几。举个简单的例子：
 
对于排列4213来说，4在4213中排第3，注意从0开始，2在213中排第1，1在13中排第0，3在3中排第0，即：
 
，这样得到4213在所有排列中排第ans=20 
*/

#include <stdio.h>

long long jiecheng(int i)//算阶乘 
{
	if (i==1) return 1;
	else if(i==0) return 0;
	else return i*jiecheng(i-1);
}

int an(char a[17],int i)//算an，即阶乘前面的系数 
{
	int j;
	int tmp = 0;
	if(i==16) return 0;
	for (j = i+1;j<17;j++)
	{
		if(a[i]>a[j]) tmp++;
	}
	return tmp;
}

int main()
{
	int i=0;
	long long sum=0;
	char c[17] = {"bckfqlajhemgiodnp"};
	for (i;i<17;i++)
	{
		sum=sum+an(c,i)*jiecheng(16-i);	
	}
	printf("%lld\n",sum);
	return 0;
}
